# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import wowml_pb2 as wowml__pb2


class WowControllerStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Setup = channel.unary_unary(
                '/wowml.WowController/Setup',
                request_serializer=wowml__pb2.MlStatusRequest.SerializeToString,
                response_deserializer=wowml__pb2.MlStatus.FromString,
                )
        self.Import = channel.unary_unary(
                '/wowml.WowController/Import',
                request_serializer=wowml__pb2.ImportMlRequest.SerializeToString,
                response_deserializer=wowml__pb2.ResponseMessage.FromString,
                )
        self.Actions = channel.unary_unary(
                '/wowml.WowController/Actions',
                request_serializer=wowml__pb2.ActionRequest.SerializeToString,
                response_deserializer=wowml__pb2.ResponseMessage.FromString,
                )


class WowControllerServicer(object):
    """Missing associated documentation comment in .proto file."""

    def Setup(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Import(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Actions(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_WowControllerServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Setup': grpc.unary_unary_rpc_method_handler(
                    servicer.Setup,
                    request_deserializer=wowml__pb2.MlStatusRequest.FromString,
                    response_serializer=wowml__pb2.MlStatus.SerializeToString,
            ),
            'Import': grpc.unary_unary_rpc_method_handler(
                    servicer.Import,
                    request_deserializer=wowml__pb2.ImportMlRequest.FromString,
                    response_serializer=wowml__pb2.ResponseMessage.SerializeToString,
            ),
            'Actions': grpc.unary_unary_rpc_method_handler(
                    servicer.Actions,
                    request_deserializer=wowml__pb2.ActionRequest.FromString,
                    response_serializer=wowml__pb2.ResponseMessage.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'wowml.WowController', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class WowController(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def Setup(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/wowml.WowController/Setup',
            wowml__pb2.MlStatusRequest.SerializeToString,
            wowml__pb2.MlStatus.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Import(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/wowml.WowController/Import',
            wowml__pb2.ImportMlRequest.SerializeToString,
            wowml__pb2.ResponseMessage.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Actions(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/wowml.WowController/Actions',
            wowml__pb2.ActionRequest.SerializeToString,
            wowml__pb2.ResponseMessage.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
